from transformers import AutoTokenizer, AutoModelForCausalLM
import sys
import json

# Load the tokenizer and model from Hugging Face
model_name = "microsoft/Phi-3.5-mini-instruct"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

def generate_response(input_text):
    try:
        # Prepend a reset command or instruction to clarify context for the model
        prompt = f"Please respond to the following question independently:\n{input_text}"

        # Encode the input text
        inputs = tokenizer(prompt, return_tensors="pt")
        
        # Generate a response with adjusted parameters
        outputs = model.generate(
            **inputs,
            max_length=100,
            do_sample=False,
            num_return_sequences=1,
            pad_token_id=tokenizer.eos_token_id
        )

        # Check if outputs tensor has at least one token
        if outputs.size(0) > 0:
            # Decode and return the response
            response = tokenizer.decode(outputs[0], skip_special_tokens=True)
            return response
        else:
            return "No response generated by the model."

    except Exception as e:
        return f"An error occurred: {str(e)}"


def main():
    print("Python model ready")  # Signal to C# that Python is ready
    sys.stdout.flush()

    while True:
        # Read input from standard input
        input_line = sys.stdin.readline().strip()
        
        # Exit condition
        if input_line == "exit":
            print("Python exiting")
            sys.stdout.flush()
            break
        
        # Generate response
        response = generate_response(input_line)
        
        # Output the response as JSON to handle special characters
        print(json.dumps({"response": response}))
        sys.stdout.flush()

if __name__ == "__main__":
    # Check if running in an interactive console
    if sys.stdin.isatty():
        # Interactive mode
        print("Running in interactive mode. Type 'exit' to quit.")
        while True:
            input_text = input("You: ")
            if input_text.lower() == "exit":
                print("Exiting interactive mode.")
                break
            response = generate_response(input_text)
            print("Model:", response)
    else:
        # Running from the C# command-line app
        main()
